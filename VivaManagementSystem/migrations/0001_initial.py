# Generated by Django 2.1.5 on 2019-01-31 14:15

from django.db import migrations, models
import django.db.models.deletion
import util.types


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(null=True)),
                ('email_id', models.EmailField(default='invalid@example.com', max_length=254)),
                ('strength', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Batch',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(help_text='Course ID', primary_key=True, serialize=False)),
                ('degree_name', models.CharField(default='MSc', help_text='Degree', max_length=10)),
                ('course_name', models.CharField(choices=[('Applied Mathematics', util.types.CourseName('Applied Mathematics')), ('Software Systems', util.types.CourseName('Software Systems')), ('Theoretical Computer Science', util.types.CourseName('Theoretical Computer Science')), ('Data Science', util.types.CourseName('Data Science'))], default=('Software Systems', util.types.CourseName('Software Systems')), help_text='Available Courses', max_length=50)),
                ('short_name', models.CharField(choices=[('AM', util.types.CourseShortName('AM')), ('SWS', util.types.CourseShortName('PW')), ('TCS', util.types.CourseShortName('PT')), ('DS', util.types.CourseShortName('PD'))], default=('SWS', util.types.CourseShortName('PW')), help_text='Course short name', max_length=5)),
            ],
            options={
                'db_table': 'Course',
                'ordering': ['course_id'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('employee_id', models.CharField(help_text='Employee ID', max_length=10, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title', max_length=4)),
                ('name', models.CharField(help_text='Faculty name', max_length=100)),
                ('designation', models.CharField(help_text='Faculty designation', max_length=50)),
                ('short_name', models.CharField(help_text='Short name', max_length=10)),
                ('core_competency', models.CharField(help_text='Core Competency', max_length=30)),
                ('email_id', models.EmailField(default='Invalid', help_text='Email ID', max_length=254)),
                ('areas_of_interest', models.TextField(help_text='Areas of Interest')),
                ('phone_number', models.CharField(help_text='Contact', max_length=13)),
                ('is_guide', models.BooleanField(default=False, help_text='Guide?')),
                ('allocated_count', models.IntegerField(default=0, help_text='Students Allocated')),
            ],
            options={
                'db_table': 'Faculty',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='GuideStudentMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.Faculty')),
            ],
            options={
                'db_table': 'GuideStudentMap',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('roll_no', models.CharField(help_text='Student Roll No.', max_length=8, primary_key=True, serialize=False)),
                ('semester', models.IntegerField(choices=[(7, util.types.SemChoices('7')), (9, util.types.SemChoices('9')), (4, util.types.SemChoices('4'))], help_text='Semester')),
                ('name', models.CharField(help_text='Student Name', max_length=100)),
                ('email_id', models.EmailField(default='invalid@example.com', help_text='Student Email ID', max_length=254)),
                ('photo', models.ImageField(blank=True, help_text='Student Photo', upload_to='')),
                ('phone_number', models.CharField(help_text='Student Phone Number', max_length=13)),
                ('project_category', models.CharField(blank=True, choices=[('Industry', 'Industry Project'), ('Research', 'Institution/Research Project')], help_text='Project Category', max_length=20)),
                ('organization_name', models.CharField(blank=True, help_text='Organization', max_length=200)),
                ('postal_address', models.CharField(blank=True, help_text='Address', max_length=500)),
                ('address_short_url', models.URLField(blank=True, help_text='Organization Location URL')),
                ('address_city', models.CharField(blank=True, help_text='City', max_length=300)),
                ('mentor_name', models.CharField(blank=True, help_text='Mentor', max_length=100)),
                ('mentor_designation', models.CharField(blank=True, default='Mentor', help_text="Mentor's Designation", max_length=100)),
                ('mentor_email_id', models.EmailField(blank=True, default='invalid@example.com', help_text="Mentor's email ID", max_length=254)),
                ('domain_key_word', models.CharField(blank=True, help_text="Student's Domain", max_length=300)),
                ('project_title', models.CharField(help_text='Project Title', max_length=250)),
                ('join_date', models.DateField(help_text='Join Date')),
                ('report_submission_status', models.CharField(choices=[('Pending', util.types.ReportSubmissionStatus('Pending')), ('Submitted', util.types.ReportSubmissionStatus('Submitted'))], default=('Pending', util.types.ReportSubmissionStatus('Pending')), help_text='Report Submission status', max_length=20)),
                ('batch', models.ForeignKey(default=21, on_delete=django.db.models.deletion.CASCADE, to='VMS.Batch')),
            ],
            options={
                'db_table': 'Student',
                'ordering': ['roll_no'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_pass', models.CharField(help_text='Passcode', max_length=150)),
                ('user_role', models.CharField(choices=[('Administrator', util.types.UserRoles('Administrator')), ('Viva Coordinator', util.types.UserRoles('Viva Coordinator')), ('Tutor', util.types.UserRoles('Tutor')), ('Guide', util.types.UserRoles('Guide')), ('Guest', util.types.UserRoles('Guest'))], help_text='User role', max_length=50)),
                ('logged_in_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('isIDFSent', models.IntegerField(null=True)),
                ('isRSDFSent', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='VMS_Session',
            fields=[
                ('session_id', models.AutoField(help_text='Session ID', primary_key=True, serialize=False)),
                ('session_year', models.IntegerField(default=0, help_text='Session Year')),
                ('session_sem', models.CharField(choices=[('odd', util.types.SemChoices('odd')), ('even', util.types.SemChoices('even'))], default=('odd', util.types.SemChoices('odd')), help_text='Semester Choices', max_length=5)),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'VMS_Session',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='session',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='VMS.VMS_Session'),
        ),
        migrations.AddField(
            model_name='user',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.Faculty'),
        ),
        migrations.AddField(
            model_name='guidestudentmap',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.VMS_Session'),
        ),
        migrations.AddField(
            model_name='guidestudentmap',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.Student'),
        ),
        migrations.AddField(
            model_name='guidestudentmap',
            name='user',
            field=models.ForeignKey(default='-1', on_delete=django.db.models.deletion.CASCADE, to='VMS.User'),
        ),
        migrations.AddField(
            model_name='batch',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.Course'),
        ),
        migrations.AddField(
            model_name='batch',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VMS.User'),
        ),
        migrations.AlterUniqueTogether(
            name='guidestudentmap',
            unique_together={('session', 'guide', 'student')},
        ),
    ]
